class Text(HtmlElement):
    def __init__(
        self,
        tag: str | None = None,
        value: str | None = None,
    ) -> None: ...


class StyleComponent:
    def __init__(self, properties: dict | None = None) -> None:
        self.properties: dict


    def as_class(self, class_name: str) -> str: ...

    def as_tag(self, class_name: str) -> str: ...

    def as_inline(self, use_attr: bool = False) -> str: ...

    def set_property(self) -> 'StyleComponent': ...

    def align_content(self, value: str) -> 'StyleComponent': ...

    def align_items(self, value: str) -> 'StyleComponent': ...

    def align_self(self, value: str) -> 'StyleComponent': ...

    def alignment_adjust(self, value: str) -> 'StyleComponent': ...

    def alignment_baseline(self, value: str) -> 'StyleComponent': ...

    def all(self, value: str) -> 'StyleComponent': ...

    def alt(self, value: str) -> 'StyleComponent': ...

    def animation(self, value: str) -> 'StyleComponent': ...

    def animation_delay(self, value: str) -> 'StyleComponent': ...

    def animation_direction(self, value: str) -> 'StyleComponent': ...

    def animation_duration(self, value: str) -> 'StyleComponent': ...

    def animation_fill_mode(self, value: str) -> 'StyleComponent': ...

    def animation_iteration_count(self, value: str) -> 'StyleComponent': ...

    def animation_name(self, value: str) -> 'StyleComponent': ...

    def animation_play_state(self, value: str) -> 'StyleComponent': ...

    def animation_timing_function(self, value: str) -> 'StyleComponent': ...

    def azih(self, value: str) -> 'StyleComponent': ...

    def backface_visibility(self, value: str) -> 'StyleComponent': ...

    def background(self, value: str) -> 'StyleComponent': ...

    def background_attachment(self, value: str) -> 'StyleComponent': ...

    def background_clip(self, value: str) -> 'StyleComponent': ...

    def background_color(self, value: str) -> 'StyleComponent': ...

    def background_image(self, value: str) -> 'StyleComponent': ...

    def background_origin(self, value: str) -> 'StyleComponent': ...

    def background_position(self, value: str) -> 'StyleComponent': ...

    def background_repeat(self, value: str) -> 'StyleComponent': ...

    def background_size(self, value: str) -> 'StyleComponent': ...

    def background_blend_mode(self, value: str) -> 'StyleComponent': ...

    def baseline_shift(self, value: str) -> 'StyleComponent': ...

    def bleed(self, value: str) -> 'StyleComponent': ...

    def bookmark_label(self, value: str) -> 'StyleComponent': ...

    def bookmark_level(self, value: str) -> 'StyleComponent': ...

    def bookmark_state(self, value: str) -> 'StyleComponent': ...

    def border(self, value: str) -> 'StyleComponent': ...

    def border_color(self, value: str) -> 'StyleComponent': ...

    def border_style(self, value: str) -> 'StyleComponent': ...

    def border_width(self, value: str) -> 'StyleComponent': ...

    def border_bottom(self, value: str) -> 'StyleComponent': ...

    def border_bottom_color(self, value: str) -> 'StyleComponent': ...

    def border_bottom_style(self, value: str) -> 'StyleComponent': ...

    def border_bottom_width(self, value: str) -> 'StyleComponent': ...

    def border_left(self, value: str) -> 'StyleComponent': ...

    def border_left_color(self, value: str) -> 'StyleComponent': ...

    def border_left_style(self, value: str) -> 'StyleComponent': ...

    def border_left_width(self, value: str) -> 'StyleComponent': ...

    def border_right(self, value: str) -> 'StyleComponent': ...

    def border_right_color(self, value: str) -> 'StyleComponent': ...

    def border_right_style(self, value: str) -> 'StyleComponent': ...

    def border_right_width(self, value: str) -> 'StyleComponent': ...

    def border_top(self, value: str) -> 'StyleComponent': ...

    def border_top_color(self, value: str) -> 'StyleComponent': ...

    def border_top_style(self, value: str) -> 'StyleComponent': ...

    def border_top_width(self, value: str) -> 'StyleComponent': ...

    def border_collapse(self, value: str) -> 'StyleComponent': ...

    def border_image(self, value: str) -> 'StyleComponent': ...

    def border_image_outset(self, value: str) -> 'StyleComponent': ...

    def border_image_repeat(self, value: str) -> 'StyleComponent': ...

    def border_image_slice(self, value: str) -> 'StyleComponent': ...

    def border_image_source(self, value: str) -> 'StyleComponent': ...

    def border_image_width(self, value: str) -> 'StyleComponent': ...

    def border_radius(self, value: str) -> 'StyleComponent': ...

    def border_bottom_left_radius(self, value: str) -> 'StyleComponent': ...

    def border_bottom_right_radius(self, value: str) -> 'StyleComponent': ...

    def border_top_left_radius(self, value: str) -> 'StyleComponent': ...

    def border_top_right_radius(self, value: str) -> 'StyleComponent': ...

    def border_spacing(self, value: str) -> 'StyleComponent': ...

    def bottom(self, value: str) -> 'StyleComponent': ...

    def box_decoration_break(self, value: str) -> 'StyleComponent': ...

    def box_shadow(self, value: str) -> 'StyleComponent': ...

    def box_sizing(self, value: str) -> 'StyleComponent': ...

    def box_snap(self, value: str) -> 'StyleComponent': ...

    def break_after(self, value: str) -> 'StyleComponent': ...

    def break_before(self, value: str) -> 'StyleComponent': ...

    def break_inside(self, value: str) -> 'StyleComponent': ...

    def buffered_rendering(self, value: str) -> 'StyleComponent': ...

    def caption_side(self, value: str) -> 'StyleComponent': ...

    def clear(self, value: str) -> 'StyleComponent': ...

    def clear_side(self, value: str) -> 'StyleComponent': ...

    def clip(self, value: str) -> 'StyleComponent': ...

    def clip_path(self, value: str) -> 'StyleComponent': ...

    def clip_rule(self, value: str) -> 'StyleComponent': ...

    def color(self, value: str) -> 'StyleComponent': ...

    def color_adjust(self, value: str) -> 'StyleComponent': ...

    def color_correction(self, value: str) -> 'StyleComponent': ...

    def color_interpolation(self, value: str) -> 'StyleComponent': ...

    def color_interpolation_filters(self, value: str) -> 'StyleComponent': ...

    def color_profile(self, value: str) -> 'StyleComponent': ...

    def color_rendering(self, value: str) -> 'StyleComponent': ...

    def column_fill(self, value: str) -> 'StyleComponent': ...

    def column_gap(self, value: str) -> 'StyleComponent': ...

    def column_rule(self, value: str) -> 'StyleComponent': ...

    def column_rule_color(self, value: str) -> 'StyleComponent': ...

    def column_rule_style(self, value: str) -> 'StyleComponent': ...

    def column_rule_width(self, value: str) -> 'StyleComponent': ...

    def column_span(self, value: str) -> 'StyleComponent': ...

    def columns(self, value: str) -> 'StyleComponent': ...

    def column_count(self, value: str) -> 'StyleComponent': ...

    def column_width(self, value: str) -> 'StyleComponent': ...

    def contain(self, value: str) -> 'StyleComponent': ...

    def content(self, value: str) -> 'StyleComponent': ...

    def counter_increment(self, value: str) -> 'StyleComponent': ...

    def counter_reset(self, value: str) -> 'StyleComponent': ...

    def counter_set(self, value: str) -> 'StyleComponent': ...

    def cue(self, value: str) -> 'StyleComponent': ...

    def cue_after(self, value: str) -> 'StyleComponent': ...

    def cue_before(self, value: str) -> 'StyleComponent': ...

    def cursor(self, value: str) -> 'StyleComponent': ...

    def direction(self, value: str) -> 'StyleComponent': ...

    def display(self, value: str) -> 'StyleComponent': ...

    def display_inside(self, value: str) -> 'StyleComponent': ...

    def display_outside(self, value: str) -> 'StyleComponent': ...

    def display_extras(self, value: str) -> 'StyleComponent': ...

    def display_box(self, value: str) -> 'StyleComponent': ...

    def dominant_baseline(self, value: str) -> 'StyleComponent': ...

    def elevation(self, value: str) -> 'StyleComponent': ...

    def empty_cells(self, value: str) -> 'StyleComponent': ...

    def enable_background(self, value: str) -> 'StyleComponent': ...

    def fill(self, value: str) -> 'StyleComponent': ...

    def fill_opacity(self, value: str) -> 'StyleComponent': ...

    def fill_rule(self, value: str) -> 'StyleComponent': ...

    def filter(self, value: str) -> 'StyleComponent': ...

    def float(self, value: str) -> 'StyleComponent': ...

    def float_defer_column(self, value: str) -> 'StyleComponent': ...

    def float_defer_page(self, value: str) -> 'StyleComponent': ...

    def float_offset(self, value: str) -> 'StyleComponent': ...

    def float_wrap(self, value: str) -> 'StyleComponent': ...

    def flow_into(self, value: str) -> 'StyleComponent': ...

    def flow_from(self, value: str) -> 'StyleComponent': ...

    def flex(self, value: str) -> 'StyleComponent': ...

    def flex_basis(self, value: str) -> 'StyleComponent': ...

    def flex_grow(self, value: str) -> 'StyleComponent': ...

    def flex_shrink(self, value: str) -> 'StyleComponent': ...

    def flex_flow(self, value: str) -> 'StyleComponent': ...

    def flex_direction(self, value: str) -> 'StyleComponent': ...

    def flex_wrap(self, value: str) -> 'StyleComponent': ...

    def flood_color(self, value: str) -> 'StyleComponent': ...

    def flood_opacity(self, value: str) -> 'StyleComponent': ...

    def font(self, value: str) -> 'StyleComponent': ...

    def font_family(self, value: str) -> 'StyleComponent': ...

    def font_size(self, value: str) -> 'StyleComponent': ...

    def font_stretch(self, value: str) -> 'StyleComponent': ...

    def font_style(self, value: str) -> 'StyleComponent': ...

    def font_weight(self, value: str) -> 'StyleComponent': ...

    def font_feature_settings(self, value: str) -> 'StyleComponent': ...

    def font_kerning(self, value: str) -> 'StyleComponent': ...

    def font_language_override(self, value: str) -> 'StyleComponent': ...

    def font_size_adjust(self, value: str) -> 'StyleComponent': ...

    def font_synthesis(self, value: str) -> 'StyleComponent': ...

    def font_variant(self, value: str) -> 'StyleComponent': ...

    def font_variant_alternates(self, value: str) -> 'StyleComponent': ...

    def font_variant_caps(self, value: str) -> 'StyleComponent': ...

    def font_variant_east_asian(self, value: str) -> 'StyleComponent': ...

    def font_variant_ligatures(self, value: str) -> 'StyleComponent': ...

    def font_variant_numeric(self, value: str) -> 'StyleComponent': ...

    def font_variant_position(self, value: str) -> 'StyleComponent': ...

    def footnote_policy(self, value: str) -> 'StyleComponent': ...

    def glyph_orientation_horizontal(self, value: str) -> 'StyleComponent': ...

    def glyph_orientation_vertical(self, value: str) -> 'StyleComponent': ...

    def grid(self, value: str) -> 'StyleComponent': ...

    def grid_auto_flow(self, value: str) -> 'StyleComponent': ...

    def grid_auto_columns(self, value: str) -> 'StyleComponent': ...

    def grid_auto_rows(self, value: str) -> 'StyleComponent': ...

    def grid_template(self, value: str) -> 'StyleComponent': ...

    def grid_template_areas(self, value: str) -> 'StyleComponent': ...

    def grid_template_columns(self, value: str) -> 'StyleComponent': ...

    def grid_template_rows(self, value: str) -> 'StyleComponent': ...

    def grid_area(self, value: str) -> 'StyleComponent': ...

    def grid_column(self, value: str) -> 'StyleComponent': ...

    def grid_column_start(self, value: str) -> 'StyleComponent': ...

    def grid_column_end(self, value: str) -> 'StyleComponent': ...

    def grid_row(self, value: str) -> 'StyleComponent': ...

    def grid_row_start(self, value: str) -> 'StyleComponent': ...

    def grid_row_end(self, value: str) -> 'StyleComponent': ...

    def hanging_punctuation(self, value: str) -> 'StyleComponent': ...

    def height(self, value: str) -> 'StyleComponent': ...

    def hyphenate_character(self, value: str) -> 'StyleComponent': ...

    def hyphenate_limit_chars(self, value: str) -> 'StyleComponent': ...

    def hyphenate_limit_last(self, value: str) -> 'StyleComponent': ...

    def hyphenate_limit_lines(self, value: str) -> 'StyleComponent': ...

    def hyphenate_limit_zone(self, value: str) -> 'StyleComponent': ...

    def hyphens(self, value: str) -> 'StyleComponent': ...

    def icon(self, value: str) -> 'StyleComponent': ...

    def image_orientation(self, value: str) -> 'StyleComponent': ...

    def image_resolution(self, value: str) -> 'StyleComponent': ...

    def image_rendering(self, value: str) -> 'StyleComponent': ...

    def ime(self, value: str) -> 'StyleComponent': ...

    def ime_align(self, value: str) -> 'StyleComponent': ...

    def ime_mode(self, value: str) -> 'StyleComponent': ...

    def ime_offset(self, value: str) -> 'StyleComponent': ...

    def ime_width(self, value: str) -> 'StyleComponent': ...

    def initial_letters(self, value: str) -> 'StyleComponent': ...

    def inline_box_align(self, value: str) -> 'StyleComponent': ...

    def isolation(self, value: str) -> 'StyleComponent': ...

    def justify_content(self, value: str) -> 'StyleComponent': ...

    def justify_items(self, value: str) -> 'StyleComponent': ...

    def justify_self(self, value: str) -> 'StyleComponent': ...

    def kerning(self, value: str) -> 'StyleComponent': ...

    def left(self, value: str) -> 'StyleComponent': ...

    def letter_spacing(self, value: str) -> 'StyleComponent': ...

    def lighting_color(self, value: str) -> 'StyleComponent': ...

    def line_box_contain(self, value: str) -> 'StyleComponent': ...

    def line_break(self, value: str) -> 'StyleComponent': ...

    def line_grid(self, value: str) -> 'StyleComponent': ...

    def line_height(self, value: str) -> 'StyleComponent': ...

    def line_slack(self, value: str) -> 'StyleComponent': ...

    def line_snap(self, value: str) -> 'StyleComponent': ...

    def list_style(self, value: str) -> 'StyleComponent': ...

    def list_style_image(self, value: str) -> 'StyleComponent': ...

    def list_style_position(self, value: str) -> 'StyleComponent': ...

    def list_style_type(self, value: str) -> 'StyleComponent': ...

    def margin(self, value: str) -> 'StyleComponent': ...

    def margin_bottom(self, value: str) -> 'StyleComponent': ...

    def margin_left(self, value: str) -> 'StyleComponent': ...

    def margin_right(self, value: str) -> 'StyleComponent': ...

    def margin_top(self, value: str) -> 'StyleComponent': ...

    def marker(self, value: str) -> 'StyleComponent': ...

    def marker_end(self, value: str) -> 'StyleComponent': ...

    def marker_mid(self, value: str) -> 'StyleComponent': ...

    def marker_pattern(self, value: str) -> 'StyleComponent': ...

    def marker_segment(self, value: str) -> 'StyleComponent': ...

    def marker_start(self, value: str) -> 'StyleComponent': ...

    def marker_knockout_left(self, value: str) -> 'StyleComponent': ...

    def marker_knockout_right(self, value: str) -> 'StyleComponent': ...

    def marker_side(self, value: str) -> 'StyleComponent': ...

    def marks(self, value: str) -> 'StyleComponent': ...

    def marquee_direction(self, value: str) -> 'StyleComponent': ...

    def marquee_play_count(self, value: str) -> 'StyleComponent': ...

    def marquee_speed(self, value: str) -> 'StyleComponent': ...

    def marquee_style(self, value: str) -> 'StyleComponent': ...

    def mask(self, value: str) -> 'StyleComponent': ...

    def mask_image(self, value: str) -> 'StyleComponent': ...

    def mask_repeat(self, value: str) -> 'StyleComponent': ...

    def mask_position(self, value: str) -> 'StyleComponent': ...

    def mask_clip(self, value: str) -> 'StyleComponent': ...

    def mask_origin(self, value: str) -> 'StyleComponent': ...

    def mask_size(self, value: str) -> 'StyleComponent': ...

    def mask_box(self, value: str) -> 'StyleComponent': ...

    def mask_box_outset(self, value: str) -> 'StyleComponent': ...

    def mask_box_repeat(self, value: str) -> 'StyleComponent': ...

    def mask_box_slice(self, value: str) -> 'StyleComponent': ...

    def mask_box_source(self, value: str) -> 'StyleComponent': ...

    def mask_box_width(self, value: str) -> 'StyleComponent': ...

    def mask_type(self, value: str) -> 'StyleComponent': ...

    def max_height(self, value: str) -> 'StyleComponent': ...

    def max_lines(self, value: str) -> 'StyleComponent': ...

    def max_width(self, value: str) -> 'StyleComponent': ...

    def min_height(self, value: str) -> 'StyleComponent': ...

    def min_width(self, value: str) -> 'StyleComponent': ...

    def mix_blend_mode(self, value: str) -> 'StyleComponent': ...

    def nav_down(self, value: str) -> 'StyleComponent': ...

    def nav_index(self, value: str) -> 'StyleComponent': ...

    def nav_left(self, value: str) -> 'StyleComponent': ...

    def nav_right(self, value: str) -> 'StyleComponent': ...

    def nav_up(self, value: str) -> 'StyleComponent': ...

    def object_fit(self, value: str) -> 'StyleComponent': ...

    def object_position(self, value: str) -> 'StyleComponent': ...

    def offafter(self, value: str) -> 'StyleComponent': ...

    def offbefore(self, value: str) -> 'StyleComponent': ...

    def offend(self, value: str) -> 'StyleComponent': ...

    def offstart(self, value: str) -> 'StyleComponent': ...

    def opacity(self, value: str) -> 'StyleComponent': ...

    def order(self, value: str) -> 'StyleComponent': ...

    def orphans(self, value: str) -> 'StyleComponent': ...

    def outline(self, value: str) -> 'StyleComponent': ...

    def outline_color(self, value: str) -> 'StyleComponent': ...

    def outline_style(self, value: str) -> 'StyleComponent': ...

    def outline_width(self, value: str) -> 'StyleComponent': ...

    def outline_offset(self, value: str) -> 'StyleComponent': ...

    def overflow(self, value: str) -> 'StyleComponent': ...

    def overflow_x(self, value: str) -> 'StyleComponent': ...

    def overflow_y(self, value: str) -> 'StyleComponent': ...

    def overflow_style(self, value: str) -> 'StyleComponent': ...

    def overflow_wrap(self, value: str) -> 'StyleComponent': ...

    def padding(self, value: str) -> 'StyleComponent': ...

    def padding_bottom(self, value: str) -> 'StyleComponent': ...

    def padding_left(self, value: str) -> 'StyleComponent': ...

    def padding_right(self, value: str) -> 'StyleComponent': ...

    def padding_top(self, value: str) -> 'StyleComponent': ...

    def page(self, value: str) -> 'StyleComponent': ...

    def page_break_after(self, value: str) -> 'StyleComponent': ...

    def page_break_before(self, value: str) -> 'StyleComponent': ...

    def page_break_inside(self, value: str) -> 'StyleComponent': ...

    def paint_order(self, value: str) -> 'StyleComponent': ...

    def pause(self, value: str) -> 'StyleComponent': ...

    def pause_after(self, value: str) -> 'StyleComponent': ...

    def pause_before(self, value: str) -> 'StyleComponent': ...

    def perspective(self, value: str) -> 'StyleComponent': ...

    def perspective_origin(self, value: str) -> 'StyleComponent': ...

    def pitch(self, value: str) -> 'StyleComponent': ...

    def pitch_range(self, value: str) -> 'StyleComponent': ...

    def play_during(self, value: str) -> 'StyleComponent': ...

    def pointer_events(self, value: str) -> 'StyleComponent': ...

    def position(self, value: str) -> 'StyleComponent': ...

    def quotes(self, value: str) -> 'StyleComponent': ...

    def region_fragment(self, value: str) -> 'StyleComponent': ...

    def resize(self, value: str) -> 'StyleComponent': ...

    def rest(self, value: str) -> 'StyleComponent': ...

    def rest_after(self, value: str) -> 'StyleComponent': ...

    def rest_before(self, value: str) -> 'StyleComponent': ...

    def richness(self, value: str) -> 'StyleComponent': ...

    def right(self, value: str) -> 'StyleComponent': ...

    def ruby_align(self, value: str) -> 'StyleComponent': ...

    def ruby_merge(self, value: str) -> 'StyleComponent': ...

    def ruby_position(self, value: str) -> 'StyleComponent': ...

    def scroll_behavior(self, value: str) -> 'StyleComponent': ...

    def scroll_snap_coordinate(self, value: str) -> 'StyleComponent': ...

    def scroll_snap_destination(self, value: str) -> 'StyleComponent': ...

    def scroll_snap_points_x(self, value: str) -> 'StyleComponent': ...

    def scroll_snap_points_y(self, value: str) -> 'StyleComponent': ...

    def scroll_snap_type(self, value: str) -> 'StyleComponent': ...

    def shape_image_threshold(self, value: str) -> 'StyleComponent': ...

    def shape_inside(self, value: str) -> 'StyleComponent': ...

    def shape_margin(self, value: str) -> 'StyleComponent': ...

    def shape_outside(self, value: str) -> 'StyleComponent': ...

    def shape_padding(self, value: str) -> 'StyleComponent': ...

    def shape_rendering(self, value: str) -> 'StyleComponent': ...

    def size(self, value: str) -> 'StyleComponent': ...

    def speak(self, value: str) -> 'StyleComponent': ...

    def speak_as(self, value: str) -> 'StyleComponent': ...

    def speak_header(self, value: str) -> 'StyleComponent': ...

    def speak_numeral(self, value: str) -> 'StyleComponent': ...

    def speak_punctuation(self, value: str) -> 'StyleComponent': ...

    def speech_rate(self, value: str) -> 'StyleComponent': ...

    def stop_color(self, value: str) -> 'StyleComponent': ...

    def stop_opacity(self, value: str) -> 'StyleComponent': ...

    def stress(self, value: str) -> 'StyleComponent': ...

    def string_set(self, value: str) -> 'StyleComponent': ...

    def stroke(self, value: str) -> 'StyleComponent': ...

    def stroke_dasharray(self, value: str) -> 'StyleComponent': ...

    def stroke_dashoffset(self, value: str) -> 'StyleComponent': ...

    def stroke_linecap(self, value: str) -> 'StyleComponent': ...

    def stroke_linejoin(self, value: str) -> 'StyleComponent': ...

    def stroke_miterlimit(self, value: str) -> 'StyleComponent': ...

    def stroke_opacity(self, value: str) -> 'StyleComponent': ...

    def stroke_width(self, value: str) -> 'StyleComponent': ...

    def tab_size(self, value: str) -> 'StyleComponent': ...

    def table_layout(self, value: str) -> 'StyleComponent': ...

    def text_align(self, value: str) -> 'StyleComponent': ...

    def text_align_all(self, value: str) -> 'StyleComponent': ...

    def text_align_last(self, value: str) -> 'StyleComponent': ...

    def text_anchor(self, value: str) -> 'StyleComponent': ...

    def text_combine_upright(self, value: str) -> 'StyleComponent': ...

    def text_decoration(self, value: str) -> 'StyleComponent': ...

    def text_decoration_color(self, value: str) -> 'StyleComponent': ...

    def text_decoration_line(self, value: str) -> 'StyleComponent': ...

    def text_decoration_style(self, value: str) -> 'StyleComponent': ...

    def text_decoration_skip(self, value: str) -> 'StyleComponent': ...

    def text_emphasis(self, value: str) -> 'StyleComponent': ...

    def text_emphasis_color(self, value: str) -> 'StyleComponent': ...

    def text_emphasis_style(self, value: str) -> 'StyleComponent': ...

    def text_emphasis_position(self, value: str) -> 'StyleComponent': ...

    def text_emphasis_skip(self, value: str) -> 'StyleComponent': ...

    def text_height(self, value: str) -> 'StyleComponent': ...

    def text_indent(self, value: str) -> 'StyleComponent': ...

    def text_justify(self, value: str) -> 'StyleComponent': ...

    def text_orientation(self, value: str) -> 'StyleComponent': ...

    def text_overflow(self, value: str) -> 'StyleComponent': ...

    def text_rendering(self, value: str) -> 'StyleComponent': ...

    def text_shadow(self, value: str) -> 'StyleComponent': ...

    def text_size_adjust(self, value: str) -> 'StyleComponent': ...

    def text_space_collapse(self, value: str) -> 'StyleComponent': ...

    def text_spacing(self, value: str) -> 'StyleComponent': ...

    def text_transform(self, value: str) -> 'StyleComponent': ...

    def text_underline_position(self, value: str) -> 'StyleComponent': ...

    def text_wrap(self, value: str) -> 'StyleComponent': ...

    def top(self, value: str) -> 'StyleComponent': ...

    def touch_action(self, value: str) -> 'StyleComponent': ...

    def transform(self, value: str) -> 'StyleComponent': ...

    def transform_box(self, value: str) -> 'StyleComponent': ...

    def transform_origin(self, value: str) -> 'StyleComponent': ...

    def transform_style(self, value: str) -> 'StyleComponent': ...

    def transition(self, value: str) -> 'StyleComponent': ...

    def transition_delay(self, value: str) -> 'StyleComponent': ...

    def transition_duration(self, value: str) -> 'StyleComponent': ...

    def transition_set_property(self, value: str) -> 'StyleComponent': ...

    def unicode_bidi(self, value: str) -> 'StyleComponent': ...

    def vector_effect(self, value: str) -> 'StyleComponent': ...

    def vertical_align(self, value: str) -> 'StyleComponent': ...

    def visibility(self, value: str) -> 'StyleComponent': ...

    def voice_balance(self, value: str) -> 'StyleComponent': ...

    def voice_duration(self, value: str) -> 'StyleComponent': ...

    def voice_family(self, value: str) -> 'StyleComponent': ...

    def voice_pitch(self, value: str) -> 'StyleComponent': ...

    def voice_range(self, value: str) -> 'StyleComponent': ...

    def voice_rate(self, value: str) -> 'StyleComponent': ...

    def voice_stress(self, value: str) -> 'StyleComponent': ...

    def voice_volumn(self, value: str) -> 'StyleComponent': ...

    def volume(self, value: str) -> 'StyleComponent': ...

    def white_space(self, value: str) -> 'StyleComponent': ...

    def widows(self, value: str) -> 'StyleComponent': ...

    def width(self, value: str) -> 'StyleComponent': ...

    def will_change(self, value: str) -> 'StyleComponent': ...

    def word_break(self, value: str) -> 'StyleComponent': ...

    def word_spacing(self, value: str) -> 'StyleComponent': ...

    def word_wrap(self, value: str) -> 'StyleComponent': ...

    def wrap_flow(self, value: str) -> 'StyleComponent': ...

    def wrap_through(self, value: str) -> 'StyleComponent': ...

    def writing_mode(self, value: str) -> 'StyleComponent': ...

    def z_index(self, value: str) -> 'StyleComponent': ...

    def transition_timing_function(self, value: str) -> 'StyleComponent': ...


class HtmlElement:
    def __init__(self, tag: str | None = None) -> None:
        self.attrs: dict
        self.components: list
        self.tag: str


    def formated(self) -> str: ...

    def as_tag(self) -> str: ...

    def set_attr(self, name: str, value: str) -> 'HtmlElement': ...

    def tc_prop(self, name: str, value: str) -> 'HtmlElement': ...

    def set_id(self, value: str) -> 'HtmlElement': ...

    def set_class(self, value: str) -> 'HtmlElement': ...

    def style(self, value: str) -> 'HtmlElement': ...

    def title(self, value: str) -> 'HtmlElement': ...

    def lang(self, value: str) -> 'HtmlElement': ...

    def tabindex(self, value: str) -> 'HtmlElement': ...

    def contenteditable(self, value: str) -> 'HtmlElement': ...

    def hidden(self, value: str) -> 'HtmlElement': ...

    def draggable(self, value: str) -> 'HtmlElement': ...

    def href(self, value: str) -> 'HtmlElement': ...

    def src(self, value: str) -> 'HtmlElement': ...

    def alt(self, value: str) -> 'HtmlElement': ...

    def target(self, value: str) -> 'HtmlElement': ...

    def height(self, value: str) -> 'HtmlElement': ...

    def set_type(self, value: str) -> 'HtmlElement': ...

    def set_value(self, value: str) -> 'HtmlElement': ...

    def placeholder(self, value: str) -> 'HtmlElement': ...

    def required(self, value: str) -> 'HtmlElement': ...

    def disabled(self, value: str) -> 'HtmlElement': ...

    def readonly(self, value: str) -> 'HtmlElement': ...

    def min(self, value: str) -> 'HtmlElement': ...

    def max(self, value: str) -> 'HtmlElement': ...

    def step(self, value: str) -> 'HtmlElement': ...

    def checked(self, value: str) -> 'HtmlElement': ...

    def set_controls(self, value: str) -> 'HtmlElement': ...

    def autoplay(self, value: str) -> 'HtmlElement': ...

    def set_loop(self, value: str) -> 'HtmlElement': ...

    def poster(self, value: str) -> 'HtmlElement': ...

    def charset(self, value: str) -> 'HtmlElement': ...

    def name(self, value: str) -> 'HtmlElement': ...

    def content(self, value: str) -> 'HtmlElement': ...

    def rel(self, value: str) -> 'HtmlElement': ...

    def append(self, item: str) -> None: ...


